{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/nimrodmendel/Projects_2020_2021/ITC_Full_Stack/React/react-project-2-NimrodMendel/src/Components/TweetForm/TweetForm.jsx\";\nimport React from \"react\";\nimport { Button, Container, Form, Row, Alert } from \"react-bootstrap\";\nimport \"./TweetForm.css\";\nimport { appContext } from \"../../appContext\";\n\nclass TweetForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: \"\",\n      userName: localStorage.getItem(\"userName\"),\n      //  Always get the most updated username from localStorage\n      date: \"\"\n    };\n  }\n  /**\n   * The function creates a new tweet object and sends it to App.js\n   * @param {event} event\n   */\n\n\n  onHandleTweet(event, handleOnAddTweet) {\n    event.preventDefault();\n    const newTweet = {\n      content: this.state.content,\n      userName: this.state.userName,\n      date: new Date().toISOString()\n    };\n    this.setState({\n      content: \"\"\n    });\n    handleOnAddTweet(newTweet);\n  }\n  /**\n   * Event handler for text-area\n   * @param {event} event\n   */\n\n\n  onHandleTweetTextChange(event) {\n    this.setState({\n      content: event.target.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(appContext.Consumer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TweetForm;","map":{"version":3,"sources":["/Users/nimrodmendel/Projects_2020_2021/ITC_Full_Stack/React/react-project-2-NimrodMendel/src/Components/TweetForm/TweetForm.jsx"],"names":["React","Button","Container","Form","Row","Alert","appContext","TweetForm","Component","constructor","props","state","content","userName","localStorage","getItem","date","onHandleTweet","event","handleOnAddTweet","preventDefault","newTweet","Date","toISOString","setState","onHandleTweetTextChange","target","value","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,IAA5B,EAAkCC,GAAlC,EAAuCC,KAAvC,QAAoD,iBAApD;AACA,OAAO,iBAAP;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,SAAN,SAAwBP,KAAK,CAACQ,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,QAAQ,EAAEC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAFC;AAEiC;AAC5CC,MAAAA,IAAI,EAAE;AAHK,KAAb;AAKD;AAED;AACF;AACA;AACA;;;AACEC,EAAAA,aAAa,CAACC,KAAD,EAAQC,gBAAR,EAA0B;AACrCD,IAAAA,KAAK,CAACE,cAAN;AACA,UAAMC,QAAQ,GAAG;AACfT,MAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OADL;AAEfC,MAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE,QAFN;AAGfG,MAAAA,IAAI,EAAE,IAAIM,IAAJ,GAAWC,WAAX;AAHS,KAAjB;AAKA,SAAKC,QAAL,CAAc;AAAEZ,MAAAA,OAAO,EAAE;AAAX,KAAd;AACAO,IAAAA,gBAAgB,CAACE,QAAD,CAAhB;AACD;AAED;AACF;AACA;AACA;;;AACEI,EAAAA,uBAAuB,CAACP,KAAD,EAAQ;AAC7B,SAAKM,QAAL,CAAc;AAAEZ,MAAAA,OAAO,EAAEM,KAAK,CAACQ,MAAN,CAAaC;AAAxB,KAAd;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,UAAD,CAAY,QAAZ;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAxCqC;;AA0CxC,eAAerB,SAAf","sourcesContent":["import React from \"react\";\nimport { Button, Container, Form, Row, Alert } from \"react-bootstrap\";\nimport \"./TweetForm.css\";\nimport { appContext } from \"../../appContext\";\n\nclass TweetForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: \"\",\n      userName: localStorage.getItem(\"userName\"), //  Always get the most updated username from localStorage\n      date: \"\",\n    };\n  }\n\n  /**\n   * The function creates a new tweet object and sends it to App.js\n   * @param {event} event\n   */\n  onHandleTweet(event, handleOnAddTweet) {\n    event.preventDefault();\n    const newTweet = {\n      content: this.state.content,\n      userName: this.state.userName,\n      date: new Date().toISOString(),\n    };\n    this.setState({ content: \"\" });\n    handleOnAddTweet(newTweet);\n  }\n\n  /**\n   * Event handler for text-area\n   * @param {event} event\n   */\n  onHandleTweetTextChange(event) {\n    this.setState({ content: event.target.value });\n  }\n\n  render() {\n    return (\n      <appContext.Consumer>\n\n      </appContext.Consumer>\n      \n    );\n  }\n}\nexport default TweetForm;\n"]},"metadata":{},"sourceType":"module"}